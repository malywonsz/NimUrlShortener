image: docker:19.03.11

stages:
  - build-url-shortener
  - test-url-shortener
  - build-heroku

variables:
  IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

build:
  stage: build-url-shortener
  services:
    - docker:19.03.11-dind
  variables:
    DOCKER_DRIVER: overlay2
    DB_NAME: url-shortener-db
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $IMAGE:prod || true
    - docker build
        --cache-from $IMAGE:prod
        --tag $IMAGE:prod
        --file ./services/url-shortener/Dockerfile.prod
        "./services/url-shortener"
    - docker push $IMAGE:prod

test-url-shortener:
  stage: test-url-shortener
  image: $IMAGE:prod
  services:
    - postgres:12.4-alpine
  variables:
    POSTGRES_DB: url_shortener_test
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_TEST_URL: postgres://runner@postgres:5432/url_shortener_test
    DB_NAME: postgres
    NIM_ENV: testing
  script:
    - cd /usr/src/app
    - nimble c -ry tests/database_test.nim

build-heroku:
  stage: build-heroku
  services:
    - docker:19.03.11-dind
  variables:
    DOCKER_DRIVER: overlay2
    HEROKU_APP_NAME: obscure-chamber-78463
    HEROKU_REGISTRY_IMAGE: registry.heroku.com/${HEROKU_APP_NAME}/web
  script:
    - apk add --no-cache curl
    - chmod +x ./release.sh
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $IMAGE:build || true
    - docker pull $IMAGE:deploy || true
    - docker build
        --target build
        --cache-from $IMAGE:build
        --tag $IMAGE:build
        --tag $IMAGE:build-$CI_COMMIT_SHORT_SHA
        --file ./Dockerfile.deploy
        "."
    - docker build
        --target deploy
        --cache-from $IMAGE:deploy
        --tag $IMAGE:deploy
        --tag $IMAGE:deploy-$CI_COMMIT_SHORT_SHA
        --tag $HEROKU_REGISTRY_IMAGE
        --file ./Dockerfile.deploy
        "."
    - docker push $IMAGE:build
    - docker push $IMAGE:build-$CI_COMMIT_SHORT_SHA
    - docker push $IMAGE:deploy
    - docker push $IMAGE:deploy-$CI_COMMIT_SHORT_SHA
    - echo -n $HEROKU_AUTH_TOKEN | docker login -u _ --password-stdin registry.heroku.com
    - docker push $HEROKU_REGISTRY_IMAGE
    - ./release.sh
